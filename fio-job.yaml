apiVersion: batch/v1
kind: Job
metadata:
  name: fio-benchmark-job
spec:
  parallelism: 1
  completions: 1
  completionMode: Indexed
  template:
    metadata:
      labels:
        app: fio-benchmark
      annotations:
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/cpu-limit: "0"
        gke-gcsfuse/memory-limit: "0"
        gke-gcsfuse/ephemeral-storage-limit: "0"
    spec:
      restartPolicy: Never
      serviceAccountName: warp-benchmark
      containers:
        - name: fio-benchmark
          image: ubuntu:22.04
          env:
            # FIO Configuration Environment Variables
            - name: FIO_RUNTIME
              value: "60"
            - name: FIO_BLOCKSIZE
              value: "4k"
            - name: FIO_IODEPTH
              value: "32"
            - name: FIO_NUMJOBS
              value: "4"
            - name: FIO_RW_MODE
              value: "randread"
            - name: FIO_DIRECTORY
              value: "/mnt/disks/test-bucket"
            - name: FIO_SIZE
              value: "1G"
            - name: FIO_FILENAME
              value: "fio-test-file"
            # Optional parameters
            - name: FIO_DIRECT
              value: "1"
            - name: FIO_SYNC
              value: "0"
            - name: FIO_ENGINE
              value: "libaio"
            - name: FIO_VERIFY
              value: ""
            - name: FIO_GROUP_REPORTING
              value: "1"
            # GCS/GKE specific
            - name: BUCKET_NAME
              value: "gcs-fuse-warp-test-bucket"
            - name: PROJECT_ID
              value: "supercomputer-testing"
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
          command:
            - "/bin/bash"
            - "-c"
            - |
              set -e
              
              echo "=== FIO Benchmark Job Starting ==="
              echo "Timestamp: $(date)"
              echo "Node: $(hostname)"
              
              # Install required packages
              echo "Installing dependencies..."
              apt-get update -qq
              apt-get install -y fio curl time
              
              # Display environment variables
              echo "=== Environment Variables ==="
              echo "FIO_RUNTIME: ${FIO_RUNTIME}"
              echo "FIO_BLOCKSIZE: ${FIO_BLOCKSIZE}"
              echo "FIO_IODEPTH: ${FIO_IODEPTH}"
              echo "FIO_NUMJOBS: ${FIO_NUMJOBS}"
              echo "FIO_RW_MODE: ${FIO_RW_MODE}"
              echo "FIO_DIRECTORY: ${FIO_DIRECTORY}"
              echo "FIO_SIZE: ${FIO_SIZE}"
              echo "FIO_FILENAME: ${FIO_FILENAME}"
              echo "FIO_ENGINE: ${FIO_ENGINE}"
              echo "BUCKET_NAME: ${BUCKET_NAME}"
              
              # Check mount point
              echo "=== Storage Information ==="
              echo "Mount points:"
              df -h
              echo ""
              echo "Target directory contents:"
              ls -la ${FIO_DIRECTORY} || echo "Directory ${FIO_DIRECTORY} not accessible"
              
              # Create FIO job file
              echo "=== Creating FIO Job Configuration ==="
              cat > /tmp/fio-job.ini << EOF
              [global]
              ioengine=${FIO_ENGINE}
              direct=${FIO_DIRECT}
              sync=${FIO_SYNC}
              group_reporting=${FIO_GROUP_REPORTING}
              time_based=1
              runtime=${FIO_RUNTIME}
              
              [benchmark]
              name=gke-fio-benchmark
              directory=${FIO_DIRECTORY}
              filename=${FIO_FILENAME}
              rw=${FIO_RW_MODE}
              bs=${FIO_BLOCKSIZE}
              iodepth=${FIO_IODEPTH}
              numjobs=${FIO_NUMJOBS}
              size=${FIO_SIZE}
              EOF
              
              # Add verification if specified
              if [ -n "${FIO_VERIFY}" ]; then
                echo "verify=${FIO_VERIFY}" >> /tmp/fio-job.ini
              fi
              
              echo "FIO Configuration:"
              cat /tmp/fio-job.ini
              
              # Run FIO benchmark
              echo "=== Running FIO Benchmark ==="
              echo "Start time: $(date)"
              
              # Use time to measure total execution time
              time fio /tmp/fio-job.ini --output-format=json+ --output=/tmp/fio-results.json
              
              echo "End time: $(date)"
              
              # Display results
              echo "=== FIO Results Summary ==="
              if [ -f /tmp/fio-results.json ]; then
                # Extract key metrics using basic tools
                echo "Raw JSON output saved to /tmp/fio-results.json"
                
                # Try to extract basic metrics
                grep -o '"iops":[0-9.]*' /tmp/fio-results.json | head -5 || echo "Could not extract IOPS"
                grep -o '"bw":[0-9.]*' /tmp/fio-results.json | head -5 || echo "Could not extract bandwidth"
                grep -o '"lat_ns":{"min":[0-9.]*,"max":[0-9.]*,"mean":[0-9.]*' /tmp/fio-results.json | head -3 || echo "Could not extract latency"
                
                # Show full results for manual inspection
                echo "=== Full FIO Results ==="
                cat /tmp/fio-results.json
              fi
              
              echo "=== FIO Benchmark Job Completed ==="
              echo "Timestamp: $(date)"

          volumeMounts:
            - name: gcs-fuse-test-volume
              mountPath: /mnt/disks/test-bucket
      volumes:
        - name: gcs-fuse-test-volume
          csi:
            driver: gcsfuse.csi.storage.gke.io
            readOnly: false
            volumeAttributes:
              bucketName: "gcs-fuse-warp-test-bucket"
              mountOptions: "implicit-dirs,metadata-cache:ttl-secs:-1,metadata-cache:stat-cache-max-size-mb:-1,metadata-cache:type-cache-max-size-mb:-1,log-severity=trace"
