apiVersion: batch/v1
kind: Job
metadata:
  name: with-http
spec:
  parallelism: 0
  completions: 0
  completionMode: Indexed
  template:
    metadata:
      labels:
        app: benchmark-job
    spec:
      restartPolicy: Never
      # serviceAccountName: warp-benchmark
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - benchmark-job
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: go-sdk-tail-stat-latency
          image: ubuntu:20.04
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JOB_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
          command:
            - /bin/bash
            - -c
            - |
              set -x
              set -e

              export DEBIAN_FRONTEND=noninteractive

              # Install necessary dependencies
              apt-get update
              apt-get install -y curl sudo gnupg git wget

              # install go
              architecture=$(dpkg --print-architecture)
              wget -O go_tar.tar.gz https://go.dev/dl/go1.23.5.linux-${architecture}.tar.gz
              sudo tar -C /usr/local -xzf go_tar.tar.gz
              export PATH=${PATH}:/usr/local/go/bin

              # Clone the custom go client repository and run the benchmark
              git clone -b reproduce_stat_tail https://github.com/raj-prince/custom-go-client-benchmark.git
              cd custom-go-client-benchmark
              go run . --worker 100 --stat-call-per-worker 20000 --bucket gcs-fuse-warp-test-bucket --obj-prefix "a" --obj-suffix "b" --client-protocol http
              echo "********* Run Complete ***********"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: with-grpc
spec:
  parallelism: 64
  completions: 64
  completionMode: Indexed
  template:
    metadata:
      labels:
        app: benchmark-job
    spec:
      restartPolicy: Never
      # serviceAccountName: warp-benchmark
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - benchmark-job
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: go-sdk-tail-stat-latency
          image: ubuntu:20.04
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JOB_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
          command:
            - /bin/bash
            - -c
            - |
              set -x
              set -e

              export DEBIAN_FRONTEND=noninteractive

              # Install necessary dependencies
              apt-get update
              apt-get install -y curl sudo gnupg git wget

              # install go
              architecture=$(dpkg --print-architecture)
              wget -O go_tar.tar.gz https://go.dev/dl/go1.23.5.linux-${architecture}.tar.gz
              sudo tar -C /usr/local -xzf go_tar.tar.gz
              export PATH=${PATH}:/usr/local/go/bin

              # Clone and run the benchmark with read-stall-timeout set to true
              git clone -b reproduce_stat_tail https://github.com/raj-prince/custom-go-client-benchmark.git
              cd custom-go-client-benchmark
              go run . --worker 100 --stat-call-per-worker 20000 --bucket gcs-fuse-warp-test-bucket --obj-prefix "a" --obj-suffix "b" --client-protocol grpc
              echo "********* Run Complete ***********"
